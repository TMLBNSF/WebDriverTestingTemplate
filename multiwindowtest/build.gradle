apply plugin: 'java'
apply plugin: 'eclipse'
group = 'selenium.webdriver.qa'

ext {
    projTitle = 'Test MultiWindow'
    projVersion = '1.0'
}

dependencies {
    compile project(':commonlib')
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '2.+'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.+'
    compile group: 'junit', name: 'junit', version: '4.+'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.+'
}
	
task show << {
    println ""
    println "-----------------------------------------------"
    println "Project Name: " + projTitle
    println "Version: " + projVersion
    println "Home directory: "
    println "Build output: " + relativePath(compileJava.destinationDir)
    println "Resources output: " + relativePath(processResources.destinationDir)
    println "Test output dir: " + relativePath(sourceSets.test.output.classesDir)
    println "Test result dir: " + relativePath(testResultsDir)
    println "Report dir: " + relativePath(testReportDir)
    println "-----------------------------------------------"
} 

tasks.withType(Test) {
    jvmArgs '-Xms128m', '-Xmx1024m', '-XX:MaxPermSize=128m'
    maxParallelForks = 4
    testLogging {
        exceptionFormat "full"
        events "started", "passed", "skipped", "failed", "standardOut", "standardError"
    }
    forkEvery = 0
    
    //systemProperty 'my.property', 'true'
    //System.setProperty("webdriver.chrome.driver", "...\chromedriver.exe");
    //testLogging.showStandardStreams = true
    //beforeTest { descriptor ->
    //    logger.lifecycle("Running test: " + descriptor)
    //}
    //onOutput { descriptor, event ->
    //    logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message)
    //}
    
}
	
task runAllTests(type: Test) {
    // this method needs a forkEvery method instead of by classes. Gradle thinks AllTests is one class but it isn't.
    include '**/AllTests.class'
    testReportDir = file("${reporting.baseDir}/AllTests")
    testResultsDir = file("${buildDir}/test-results/AllTests")
}

task runSkipSuite(type: Test) {
    // this method works but requires running a separate HTTP server to serve the local html files
    include '**/TestHandleCache*.class'
    testReportDir = file("${reporting.baseDir}/TestHandleCache")
    testResultsDir = file("${buildDir}/test-results/TestHandleCache")
}

