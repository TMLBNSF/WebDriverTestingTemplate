apply plugin: 'java'
apply plugin: 'eclipse'
group = 'selenium.webdriver.qa'

dependencies {
    compile project(':commonlib')
}

ext {
    projTitle = 'WebDriver on Google'
    projVersion = '1.0'
    buildDirectory = '$buildDir'
}

repositories {
    mavenCentral()
	  // javacpp and javacv are required by Sikuli
    maven {
        url "http://maven2.javacpp.googlecode.com/git/"
    }
    maven {
        url "http://maven2.javacv.googlecode.com/git/"
    }
}

dependencies {
    compile group: 'org.sikuli', name: 'sikuli-api', version: '1.0.+'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '2.+'
    compile group: 'commons-io', name: 'commons-io', version: '1.3.+'
    compile group: 'junit', name: 'junit', version: '4.+'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
    compile group: 'net.sf.opencsv', name: 'opencsv', version: '2.+'
}
	
task show << {
    println ""
    println "-----------------------------------------------"
    println "Project Name: " + projTitle
    println "Version: " + projVersion
    println "Home directory: "
    println "Build output: " + relativePath(compileJava.destinationDir)
    println "Resources output: " + relativePath(processResources.destinationDir)
    println "Test output dir: " + relativePath(sourceSets.test.output.classesDir)
    println "Test result dir: " + relativePath(testResultsDir)
    println "Report dir: " + relativePath(testReportDir)
    println "-----------------------------------------------"
} 

// run tests with -info or -debug option to get logging
tasks.withType(Test) {

    jvmArgs '-Xms128m', '-Xmx1024m', '-XX:MaxPermSize=128m'
    
    testLogging {
        exceptionFormat "full"
        events "started", "passed", "skipped", "failed", "standardOut", "standardError"
        displayGranularity = 0
        showStandardStreams = false
    }    
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }
   
    systemProperties['hubIP'] = '127.0.0.1'
    systemProperties['hubPort'] = '4444'
    systemProperties['testURL'] = 'http://www.google.com/'
    
    // initial browser size and position
    systemProperties['windowXPosition'] = '40'
    systemProperties['windowYPosition'] = '40'
    systemProperties['windowWidth'] = '900'
    systemProperties['windowHeight'] = '600'
    
}

task runAllTestsInFirefox(type: Test) {
    maxParallelForks = 2
    systemProperties['browser'] = 'firefox'
    include '**/GoogleTest*.class'
    testReportDir = file("${reporting.baseDir}/GoogleTestFF")
    testResultsDir = file("${buildDir}/test-results/GoogleTestFF")
}

task runAllTestsInIE(type: Test) {
    maxParallelForks = 1
    systemProperties['browser'] = 'ie'
    include '**/GoogleTest*.class'
    testReportDir = file("${reporting.baseDir}/GoogleTestIE")
    testResultsDir = file("${buildDir}/test-results/GoogleTestIE")
}

task runAllTestsInChrome(type: Test) {
    maxParallelForks = 2
    systemProperties['browser'] = 'chrome'
    include '**/GoogleTest*.class'
    testReportDir = file("${reporting.baseDir}/GoogleTestC")
    testResultsDir = file("${buildDir}/test-results/GoogleTestC")
}

task runParameterizedExample(type: Test) {
   include '**/DataProviderTest.class'
   // test output goes to default location
}

	