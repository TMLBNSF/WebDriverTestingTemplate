apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'idea'
group = 'selenium.webdriver.examples'

// This project will work with the --offline arg if you don't have internet access.
// The initial run (of course) requires internet to download the libs.

ext {
    projTitle = 'Test Parallel MultiWindow'
    projVersion = '1.0'
}

dependencies {
    compile project(':commonlib')
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '2.+'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.+'
    compile group: 'junit', name: 'junit', version: '4.+'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.+'
}

// running the task distZip creates a .zip archive of this project.
// to run it, unzip it and run the embedded bin/project.bat script.
mainClassName = "webdriver.test.GradleHttpServer"
	
task show << {
    println ""
    println "-----------------------------------------------"
    println "Project Name: " + projTitle
    println "Version: " + projVersion
    println "Home directory: "
    println "Build output: " + relativePath(compileJava.destinationDir)
    println "Resources output: " + relativePath(processResources.destinationDir)
    println "Test output dir: " + relativePath(sourceSets.test.output.classesDir)
    println "Test result dir: " + relativePath(testResultsDir)
    println "Report dir: " + relativePath(testReportDir)
    println "-----------------------------------------------"
} 

tasks.withType(Test) {

    jvmArgs '-Xms128m', '-Xmx1024m', '-XX:MaxPermSize=128m'
    maxParallelForks = 4
    testLogging {
        exceptionFormat "full"
        events "started", "passed", "skipped", "failed", "standardOut", "standardError"
        displayGranularity = 0
        showStandardStreams = false
    }    
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }    
   
}

// this task is still broken.  trying to figure out why it fails.
task(runWeb, dependsOn: 'classes', type: Exec) {
    // Runs in new cmd.exe shell window using cmd START feature
    // Script determines its own run directory and classpath
    commandLine 'cmd.exe', '/c', 'START', 'startWeb.bat'
}

task runParallelTests(type: Test) {
    description = 'Runs all JUnit test classes in parallel threads.'
    include '**/TestHandleCache*.class'
    testReportDir = file("${reporting.baseDir}/ParallelTests")
    testResultsDir = file("${buildDir}/test-results/ParallelTests")
    
    // System properties passed to tests
    systemProperties['testProtocol'] = 'http'
    systemProperties['testDomain'] = 'localhost'
    systemProperties['testPort'] = 8080
    systemProperties['testUri'] = '/httproot/index.html'
    systemProperties['hubUrl'] = 'localhost'
    systemProperties['hubPort'] = '4444'
    
    // initial browser size and position
    systemProperties['windowXPosition'] = '100'
    systemProperties['windowYPosition'] = '40'
    systemProperties['windowWidth'] = '400'
    systemProperties['windowHeight'] = '600'
    
    
}

